# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'
require 'ipaddr'

variables = YAML.load_file(File.join(File.dirname(__FILE__), 'variables.yaml'))
ip = IPAddr.new(variables['hostname'])
client_ip = ip.native

Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |v|
    v.customize ["modifyvm", :id, "--groups", "/OLAM"]
  end

  config.vm.define "server" do |server|
    server.vm.provider "virtualbox" do |v|
      v.name = "Oracle Linux Automation Manager"
    end
    server.vm.box = "oraclelinux/8"
    server.vm.box_url = "https://oracle.github.io/vagrant-projects/boxes/oraclelinux/8.json"
    server.vm.network "private_network", ip: ip.to_string
    server.vm.hostname = "olam"

    server.vm.provision 'shell', path: "scripts/provision.sh", env: {
      "HOSTNAME"=>variables['hostname'],
      "EMAIL"=>variables['email'],
      "PASSWORD"=>variables['password']
    }

    server.vm.provision "shell", inline: "echo Access Oracle Linux Automation Manager at ${HOSTNAME}", env: { "HOSTNAME"=>variables['hostname'] }
  end

  config.vm.define "olam_client1_ol8" do |olam_client1_ol8|
    olam_client1_ol8.vm.provider "virtualbox" do |v|
      v.name = "OLAM Client 1 - OL8"
      v.memory = 1024
      v.cpus = 1
    end
    olam_client1_ol8.vm.box = "oraclelinux/8"
    olam_client1_ol8.vm.box_url = "https://oracle.github.io/vagrant-projects/boxes/oraclelinux/8.json"
    client_ip = client_ip.succ; olam_client1_ol8.vm.network "private_network", ip: client_ip.to_string
    olam_client1_ol8.vm.hostname = "ol8"
  end

  config.vm.define "olam_client2_ol8" do |olam_client2_ol8|
    olam_client2_ol8.vm.provider "virtualbox" do |v|
      v.name = "OLAM Client 2 - OL8"
      v.memory = 1024
      v.cpus = 1
    end
    olam_client2_ol8.vm.box = "oraclelinux/8"
    olam_client2_ol8.vm.box_url = "https://oracle.github.io/vagrant-projects/boxes/oraclelinux/8.json"
    client_ip = client_ip.succ; olam_client2_ol8.vm.network "private_network", ip: client_ip.to_string
    olam_client2_ol8.vm.hostname = "ol8"
  end
end